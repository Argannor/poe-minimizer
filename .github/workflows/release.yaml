name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v1
      - name: Build
        run: cargo build --release
      - name: Copy Assets
        run: copy icon.ico target/release/icon.ico
      - name: Package as zip
        uses: Argannor/zip-action@master
        with:
          glob: 'icon.ico poe-minimizer.exe'
          cwd: 'target/release'
          target: 'target/release/poe-minimizer-win-x64.zip'
      - name: Calculate Hashes
        id: calc_hashes
        uses: Argannor/checksum-action@master
        with:
          glob: "target/release/*.zip target/release/*.exe icon.ico"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Checksums:
            ${{steps.calc_hashes.outputs.checksums}}
          draft: true
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./target/release/poe-minimizer-win-x64.zip
          asset_name: ${{format('poe-minimizer-{0}-win-x64.zip', github.ref)}}
          asset_content_type: application/zip
